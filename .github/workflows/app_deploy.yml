name: "Pipeline application"

on:
  pull_request:        
    branches:
      - master
#      - development
#      - 'releases/**'
#  push:

  workflow_dispatch:      
          
jobs:
  build-push-image:
    env: 
      PROJECT_ID: sixth-emissary-359700 ## Change for your GCP Project
      TAG: latest
      IMAGE_NAME: api
      REGISTRY: app-registry
      ARTIFACTORY_REGISTRY_URL: us-central1-docker.pkg.dev
      GKE_CLUSTER_NAME: tembici-gke
      GKE_CLUSTER_REGION: us-central1
    name: build and push image to Registry
    runs-on: ubuntu-latest

    steps: 
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Auth GCP
        uses: google-github-actions/auth@v0
        with: 
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS}}   

      - name: Using Gcloud SDK
        uses: google-github-actions/setup-gcloud@v0

      - name: Login in to google artifactory registry
        run: gcloud auth configure-docker $ARTIFACTORY_REGISTRY_URL --quiet  
      
      - name: Build docker image 
        run: docker build -t $ARTIFACTORY_REGISTRY_URL/$PROJECT_ID/$REGISTRY/$IMAGE_NAME:$TAG . 
      
      - name: Test app
        run: docker run -t $ARTIFACTORY_REGISTRY_URL/$PROJECT_ID/$REGISTRY/$IMAGE_NAME:$TAG bash -c "BASE_API_ENV=test pipenv run pytest" 

      - name: Push Docker Image to Google Artifactory Registry
        run: docker push $ARTIFACTORY_REGISTRY_URL/$PROJECT_ID/$REGISTRY/$IMAGE_NAME:$TAG
        
      - name: Get GKE credentials
        run: gcloud container clusters get-credentials $GKE_CLUSTER_NAME --region $GKE_CLUSTER_REGION

      - name: Deploy k8s
        run: |
          kubectl apply -f k8s/app-ns.yml 
          cat k8s/app-deployment.yml | sed "s#__IMAGE__#${ARTIFACTORY_REGISTRY_URL}/${PROJECT_ID}/${REGISTRY}/${IMAGE_NAME}:${TAG}#g" | kubectl apply --force -f -
          kubectl apply -f k8s/app-service.yml  
          kubectl apply -f k8s/app-hpa.yml  
          kubectl -n tembici-app rollout restart deployment/app-api

      - name: Check Flask API 
        run: | 
          sleep 30s 
          export SERVICE_IP=$(kubectl get svc -n tembici-app app-api-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
          curl http://$SERVICE_IP/api/ping
